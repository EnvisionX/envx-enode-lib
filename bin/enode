#!/bin/sh -e

##
## Erlang node starter for use with systemd.
## It must be called from ExecStart in service unit file:
##
##   ExecStart=/usr/sbin/enode codec /etc/envx/codec.config envx_codec
##
## This script must be started with target user privileges. Normally
## it does when invoked from systemd unit file.
##
## Required environment:
##  - HOME     - target user home directory, e.g. /var/lib/envx-smthng.
##
## Required args:
##  - NODENAME - Erlang node name, e.g. codec. Full erlang node will
##      look like "codec@127.1";
##  - CONFIG   - Erlang app config file, e.g. /etc/envx/smthng.config;
##  - ERLAPP   - name of the target Erlang application to start.
##

NODENAME="$1"
CONFIG="$2"
ERLAPP="$3"

if echo "$NODENAME" | egrep -q '_[0-9]+$'; then
    # $NODENAME is the name with integer index
    # (for multinode configurations like Shaper)
    LOGDIR=/var/log/envx-`echo "$NODENAME" | sed -r 's/_[0-9]+$//'`
    INDEX=`echo "$NODENAME" | sed -r 's/^.+_([0-9]+)$/\1/'`
    LOG="$LOGDIR/messages-$INDEX.log"
else
    LOG=/var/lib/envx-"$NODENAME"/messages.log
fi

{
    echo "\n`date` *** STARTING ***"
    cd
    /usr/share/envx-enode-lib/check_config.escript "$CONFIG"
    erl -noinput -boot start_sasl -smp enable -name "$NODENAME"@127.1 \
        -shutdown_time 15000 \
        -config "$CONFIG" \
        -eval "{ok,[_|_]}=application:ensure_all_started(envx_topper,permanent)" \
        -eval "{ok,[_|_]}=application:ensure_all_started($ERLAPP,permanent)"
} 2>&1 | \
    reopener "$LOG"
